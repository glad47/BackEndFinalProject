2020-07-15 09:33:03 [restartedMain] INFO  c.j.w.p.PcbOnlineV2Application : 
 Starting PcbOnlineV2Application on mcdeiMac.local with PID 7902 (/Users/mc/WorkProject/pcb-online-v2/target/classes started by zl in /Users/mc/WorkProject/pcb-online-v2) 
2020-07-15 09:33:03 [restartedMain] INFO  c.j.w.p.PcbOnlineV2Application : 
 No active profile set, falling back to default profiles: default 
2020-07-15 09:33:30 [restartedMain] INFO  c.j.w.p.PcbOnlineV2Application : 
 Started PcbOnlineV2Application in 49.073 seconds (JVM running for 57.082) 
2020-07-15 10:41:52 [restartedMain] INFO  c.j.w.p.PcbOnlineV2Application : 
 Starting PcbOnlineV2Application on mcdeiMac.local with PID 8006 (/Users/mc/WorkProject/pcb-online-v2/target/classes started by zl in /Users/mc/WorkProject/pcb-online-v2) 
2020-07-15 10:41:52 [restartedMain] INFO  c.j.w.p.PcbOnlineV2Application : 
 No active profile set, falling back to default profiles: default 
2020-07-15 10:42:18 [restartedMain] INFO  c.j.w.p.PcbOnlineV2Application : 
 Started PcbOnlineV2Application in 46.355 seconds (JVM running for 52.548) 
2020-07-15 10:42:26 [http-nio-8877-exec-2] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 10:42:26 [http-nio-8877-exec-2] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 10:42:26 [http-nio-8877-exec-2] INFO  c.j.w.p.config.LogAspectConfig : 
 请求URL >>>>> [http://localhost:8877/api/auth/register] 
2020-07-15 10:42:26 [http-nio-8877-exec-2] INFO  c.j.w.p.config.LogAspectConfig : 
 请求类型 >>>> [POST] 
2020-07-15 10:42:26 [http-nio-8877-exec-2] INFO  c.j.w.p.config.LogAspectConfig : 
 IP >>>>> [0:0:0:0:0:0:0:1] 
2020-07-15 10:42:26 [http-nio-8877-exec-2] INFO  c.j.w.p.config.LogAspectConfig : 
 处理类 >>>>> [com.jugu.www.pcbonlinev2.controller.AuthController.register] 
2020-07-15 10:42:26 [http-nio-8877-exec-2] INFO  c.j.w.p.config.LogAspectConfig : 
 方法参数 >>> [[tetat@qq.com, 123456, 11111111]] 
2020-07-15 10:42:27 [http-nio-8877-exec-2] DEBUG c.j.w.p.mapper.UserMapper.selectOne : 
 ==>  Preparing: SELECT id,user_name,email,password,skype_id,google_id,facebook_id,mobile_phone,address,country,city,business_type,jobrole,applications,invalid_mark,favicon,gmt_create,gmt_modified,uuid,business_id,business_name,user_system_id,facebook_login_id,google_login_id,invitation_user_id,user_ip,audit_mark FROM user WHERE email=?  
2020-07-15 10:42:27 [http-nio-8877-exec-2] DEBUG c.j.w.p.mapper.UserMapper.selectOne : 
 ==> Parameters: tetat@qq.com(String) 
2020-07-15 10:42:27 [http-nio-8877-exec-2] DEBUG c.j.w.p.mapper.UserMapper.selectOne : 
 <==      Total: 1 
2020-07-15 10:42:27 [http-nio-8877-exec-2] ERROR c.j.w.p.e.GlobalExceptionHandler : 
 捕捉到业务类异常==> 
com.jugu.www.pcbonlinev2.exception.BusinessException: 邮箱已存在
	at com.jugu.www.pcbonlinev2.service.impl.AuthServiceImpl.register(AuthServiceImpl.java:68)
	at com.jugu.www.pcbonlinev2.controller.AuthController.register(AuthController.java:121)
	at com.jugu.www.pcbonlinev2.controller.AuthController$$FastClassBySpringCGLIB$$ba3a94c7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jugu.www.pcbonlinev2.controller.AuthController$$EnhancerBySpringCGLIB$$1ef8adf5.register(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.jugu.www.pcbonlinev2.filter.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.jugu.www.pcbonlinev2.filter.TraceIdFilter.doFilter(TraceIdFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.jugu.www.pcbonlinev2.filter.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-07-15 10:42:41 [http-nio-8877-exec-3] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 10:42:41 [http-nio-8877-exec-3] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 10:42:41 [http-nio-8877-exec-3] INFO  c.j.w.p.config.LogAspectConfig : 
 请求URL >>>>> [http://localhost:8877/api/auth/register] 
2020-07-15 10:42:41 [http-nio-8877-exec-3] INFO  c.j.w.p.config.LogAspectConfig : 
 请求类型 >>>> [POST] 
2020-07-15 10:42:41 [http-nio-8877-exec-3] INFO  c.j.w.p.config.LogAspectConfig : 
 IP >>>>> [0:0:0:0:0:0:0:1] 
2020-07-15 10:42:41 [http-nio-8877-exec-3] INFO  c.j.w.p.config.LogAspectConfig : 
 处理类 >>>>> [com.jugu.www.pcbonlinev2.controller.AuthController.register] 
2020-07-15 10:42:41 [http-nio-8877-exec-3] INFO  c.j.w.p.config.LogAspectConfig : 
 方法参数 >>> [[tetaggt@qq.com, 123456, 11111111]] 
2020-07-15 10:42:41 [http-nio-8877-exec-3] DEBUG c.j.w.p.mapper.UserMapper.selectOne : 
 ==>  Preparing: SELECT id,user_name,email,password,skype_id,google_id,facebook_id,mobile_phone,address,country,city,business_type,jobrole,applications,invalid_mark,favicon,gmt_create,gmt_modified,uuid,business_id,business_name,user_system_id,facebook_login_id,google_login_id,invitation_user_id,user_ip,audit_mark FROM user WHERE email=?  
2020-07-15 10:42:41 [http-nio-8877-exec-3] DEBUG c.j.w.p.mapper.UserMapper.selectOne : 
 ==> Parameters: tetaggt@qq.com(String) 
2020-07-15 10:42:41 [http-nio-8877-exec-3] DEBUG c.j.w.p.mapper.UserMapper.selectOne : 
 <==      Total: 0 
2020-07-15 10:42:41 [http-nio-8877-exec-3] DEBUG c.j.w.p.m.B.selectList : 
 ==>  Preparing: SELECT id,name,contact_email,telephone,prefix_no,customer_no,score,business_id,avatar FROM business_name  
2020-07-15 10:42:41 [http-nio-8877-exec-3] DEBUG c.j.w.p.m.B.selectList : 
 ==> Parameters:  
2020-07-15 10:42:42 [http-nio-8877-exec-3] ERROR c.j.w.p.e.GlobalExceptionHandler : 
 捕捉到运行时异常： 
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Table 'pcbonline.business_name' doesn't exist
### The error may exist in com/jugu/www/pcbonlinev2/mapper/BusinessUserMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,name,contact_email,telephone,prefix_no,customer_no,score,business_id,avatar  FROM business_name
### Cause: java.sql.SQLSyntaxErrorException: Table 'pcbonline.business_name' doesn't exist
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Table 'pcbonline.business_name' doesn't exist
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:177)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:78)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:96)
	at com.sun.proxy.$Proxy118.selectList(Unknown Source)
	at com.jugu.www.pcbonlinev2.service.impl.AuthServiceImpl.register(AuthServiceImpl.java:72)
	at com.jugu.www.pcbonlinev2.controller.AuthController.register(AuthController.java:121)
	at com.jugu.www.pcbonlinev2.controller.AuthController$$FastClassBySpringCGLIB$$ba3a94c7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jugu.www.pcbonlinev2.controller.AuthController$$EnhancerBySpringCGLIB$$1ef8adf5.register(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.jugu.www.pcbonlinev2.filter.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.jugu.www.pcbonlinev2.filter.TraceIdFilter.doFilter(TraceIdFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.jugu.www.pcbonlinev2.filter.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:57)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: Table 'pcbonline.business_name' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy148.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy146.query(Unknown Source)
	at com.baomidou.mybatisplus.core.executor.MybatisSimpleExecutor.doQuery(MybatisSimpleExecutor.java:67)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at com.baomidou.mybatisplus.core.executor.MybatisCachingExecutor.query(MybatisCachingExecutor.java:163)
	at com.baomidou.mybatisplus.core.executor.MybatisCachingExecutor.query(MybatisCachingExecutor.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy145.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 116 common frames omitted
2020-07-15 11:04:56 [restartedMain] INFO  c.j.w.p.PcbOnlineV2Application : 
 Starting PcbOnlineV2Application on mcdeiMac.local with PID 8096 (/Users/mc/WorkProject/pcb-online-v2/target/classes started by zl in /Users/mc/WorkProject/pcb-online-v2) 
2020-07-15 11:04:56 [restartedMain] INFO  c.j.w.p.PcbOnlineV2Application : 
 No active profile set, falling back to default profiles: default 
2020-07-15 11:05:21 [restartedMain] INFO  c.j.w.p.PcbOnlineV2Application : 
 Started PcbOnlineV2Application in 45.441 seconds (JVM running for 51.335) 
2020-07-15 11:06:16 [http-nio-8877-exec-1] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 11:06:16 [http-nio-8877-exec-1] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 11:06:16 [http-nio-8877-exec-1] INFO  c.j.w.p.config.LogAspectConfig : 
 请求URL >>>>> [http://localhost:8877/api/auth/register] 
2020-07-15 11:06:16 [http-nio-8877-exec-1] INFO  c.j.w.p.config.LogAspectConfig : 
 请求类型 >>>> [POST] 
2020-07-15 11:06:16 [http-nio-8877-exec-1] INFO  c.j.w.p.config.LogAspectConfig : 
 IP >>>>> [0:0:0:0:0:0:0:1] 
2020-07-15 11:06:16 [http-nio-8877-exec-1] INFO  c.j.w.p.config.LogAspectConfig : 
 处理类 >>>>> [com.jugu.www.pcbonlinev2.controller.AuthController.register] 
2020-07-15 11:06:16 [http-nio-8877-exec-1] INFO  c.j.w.p.config.LogAspectConfig : 
 方法参数 >>> [[tetaggt@qq.com, 123456, 11111111]] 
2020-07-15 11:06:17 [http-nio-8877-exec-1] DEBUG c.j.w.p.mapper.UserMapper.selectOne : 
 ==>  Preparing: SELECT id,user_name,email,password,skype_id,google_id,facebook_id,mobile_phone,address,country,city,business_type,jobrole,applications,invalid_mark,favicon,gmt_create,gmt_modified,uuid,business_id,business_name,user_system_id,facebook_login_id,google_login_id,invitation_user_id,user_ip,audit_mark FROM user WHERE email=?  
2020-07-15 11:06:17 [http-nio-8877-exec-1] DEBUG c.j.w.p.mapper.UserMapper.selectOne : 
 ==> Parameters: tetaggt@qq.com(String) 
2020-07-15 11:06:17 [http-nio-8877-exec-1] DEBUG c.j.w.p.mapper.UserMapper.selectOne : 
 <==      Total: 0 
2020-07-15 11:06:17 [http-nio-8877-exec-1] DEBUG c.j.w.p.m.B.selectList : 
 ==>  Preparing: SELECT id,name,contact_email,telephone,prefix_no,customer_no,score,business_id,avatar FROM business_user  
2020-07-15 11:06:17 [http-nio-8877-exec-1] DEBUG c.j.w.p.m.B.selectList : 
 ==> Parameters:  
2020-07-15 11:06:17 [http-nio-8877-exec-1] DEBUG c.j.w.p.m.B.selectList : 
 <==      Total: 10 
2020-07-15 11:06:24 [http-nio-8877-exec-1] INFO  c.j.www.pcbonlinev2.utils.RedisUtil : 
 获取前缀参数：[a2],从redis中取出为：[15],设置时长为：[-1] 
2020-07-15 11:06:24 [http-nio-8877-exec-1] INFO  c.j.w.p.u.CommonMetaObjectHandler : 
 insert data , 填充数据 
2020-07-15 11:06:24 [http-nio-8877-exec-1] DEBUG c.j.w.p.mapper.UserMapper.insert : 
 ==>  Preparing: INSERT INTO user ( email, password, favicon, gmt_create, gmt_modified, uuid, business_id, business_name, user_system_id, user_ip ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )  
2020-07-15 11:06:24 [http-nio-8877-exec-1] DEBUG c.j.w.p.mapper.UserMapper.insert : 
 ==> Parameters: tetaggt@qq.com(String), 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92password(String), https://www.pcbonline.com/file/2019-05-16/head.jpg(String), 2020-07-15T11:06:24.246(LocalDateTime), 2020-07-15T11:06:24.257(LocalDateTime), bb82c6d5-4874-4b54-bc73-8e4d4d113d2a(String), 17(Integer), ada(String), a215(String), 0:0:0:0:0:0:0:1(String) 
2020-07-15 11:06:24 [http-nio-8877-exec-1] DEBUG c.j.w.p.mapper.UserMapper.insert : 
 <==    Updates: 1 
2020-07-15 11:06:24 [http-nio-8877-exec-1] INFO  c.j.w.p.config.LogAspectConfig : 
 返回结果 <<<<<<< [ResponseResult(success=true, code=null, message=null, result=注册成功)] 
2020-07-15 15:42:56 [http-nio-8877-exec-4] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:42:56 [http-nio-8877-exec-4] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:42:58 [http-nio-8877-exec-5] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:42:58 [http-nio-8877-exec-5] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:42:58 [http-nio-8877-exec-5] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:42:58 [http-nio-8877-exec-6] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:42:58 [http-nio-8877-exec-6] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:42:58 [http-nio-8877-exec-5] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:42:59 [http-nio-8877-exec-7] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:42:59 [http-nio-8877-exec-7] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:42:59 [http-nio-8877-exec-8] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:42:59 [http-nio-8877-exec-8] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:42:59 [http-nio-8877-exec-9] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:42:59 [http-nio-8877-exec-9] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:42:59 [http-nio-8877-exec-10] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:42:59 [http-nio-8877-exec-10] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:42:59 [http-nio-8877-exec-2] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:42:59 [http-nio-8877-exec-2] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:42:59 [http-nio-8877-exec-1] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:42:59 [http-nio-8877-exec-1] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:42:59 [http-nio-8877-exec-3] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:42:59 [http-nio-8877-exec-3] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:42:59 [http-nio-8877-exec-4] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:42:59 [http-nio-8877-exec-4] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:43:00 [http-nio-8877-exec-6] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:43:00 [http-nio-8877-exec-7] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:43:00 [http-nio-8877-exec-5] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:43:00 [http-nio-8877-exec-6] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:43:00 [http-nio-8877-exec-7] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:43:00 [http-nio-8877-exec-5] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:43:03 [http-nio-8877-exec-8] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:43:03 [http-nio-8877-exec-8] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:43:06 [http-nio-8877-exec-9] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
2020-07-15 15:43:06 [http-nio-8877-exec-9] INFO  c.j.w.p.filter.JwtTokenFilter : 
 获取header的token===>【null】 
